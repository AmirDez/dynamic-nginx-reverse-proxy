# Resolve domain names using Google's DNS server
resolver 8.8.8.8;

server {
    # Listen for incoming connections on port 443 with SSL
    listen 443 ssl;
    # Define the server name
    server_name otpxy.example.com;

    # Set proxy timeouts for reading, connecting, and sending data
    proxy_read_timeout 6000;
    proxy_connect_timeout 6000;
    proxy_send_timeout 6000;
    # Bypass underscores while calling the proxy
    underscores_in_headers on;
    location / {
        # Extract URI path and set it as the upstream URL
        if ($request_uri ~ ^\/(.*)$) {
            set $upstream_url "https://$1";
        }
        # Extract host name from the upstream URL
        if ($upstream_url ~ ^https:\/\/([^\/]+)) {
            set $proxy_host_name "$1";
        }

        # Add request URI and upstream URL as headers
        add_header X-Request-URI $request_uri;
        add_header X-Upstream-URL $upstream_url;
        add_header X-Upstream-HOSTNAME $proxy_host_name;

        # Pass the request to the upstream server
        proxy_pass $upstream_url;

        # Set the proxy SSL name and enable intercepting errors
        proxy_ssl_name $proxy_host_name;
        proxy_ssl_server_name on;
        proxy_set_header Host $proxy_host_name;
        proxy_ssl_session_reuse on;

        # proxy everything as far as possible 
        # error and headers
        proxy_pass_request_headers on;
        proxy_intercept_errors on;

        # Handle Websockets and long pulling
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
    }

    # Specify SSL certificate and key paths
    ssl_certificate /opt/acme/certs/example.com/fullchain.cer;
    ssl_certificate_key /opt/acme/certs/example.com/private.key;
}
